name: Build and Deploy Aniflix Server

on:
  push:
    branches:
      - main  # Trigger deployment on push to the main branch
  workflow_dispatch:  # Allows you to manually trigger this workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Java 17
  uses: actions/setup-java@v2
  with:
    java-version: 17
    distribution: 'temurin'  # Specify the JDK distribution (use 'temurin' for Temurin JDK)
    architecture: x64


    - name: Set up Gradle
      uses: gradle/wrapper-validation-action@v1
      with:
        gradle-wrapper-path: server/gradlew  # Ensure this points to the gradle wrapper in the `server` directory.

    - name: Build using Gradle
      working-directory: ./server  # Make sure Gradle runs from the `server` directory
      run: ./gradlew clean build

    - name: Build Docker image
      working-directory: ./server  # Make sure the build happens inside the `server` directory
      run: docker build -f Dockerfile -t aniflix-server:latest .

    - name: Push Docker image to Render
      run: |
        curl -X POST https://api.render.com/v1/services/srv-cvuef8hr0fns7381f7cg/deploys \
          -H "Authorization: Bearer rnd_bQP2nphNZ83yaaXcI3yGHmTN8BrZ" \
          -H "Content-Type: application/json" \
          -d '{"clearCache": false, "dockerImageTarball": "@./server/aniflix-server.tar"}'  # Adjust the path if necessary
